-- MySQL Script generated by MySQL Workbench
-- Wed Feb  7 10:25:18 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema YouTube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema YouTube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `YouTube` DEFAULT CHARACTER SET utf8 ;
USE `YouTube` ;

-- -----------------------------------------------------
-- Table `YouTube`.`country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`country` (
  `idCountry` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `countryName` VARCHAR(65) NULL,
  PRIMARY KEY (`idCountry`),
  UNIQUE INDEX `idCountry_UNIQUE` (`idCountry` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`gender`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`gender` (
  `idGender` TINYINT UNSIGNED NOT NULL,
  `genderDescrip` VARCHAR(45) NULL,
  PRIMARY KEY (`idGender`),
  UNIQUE INDEX `idGender_UNIQUE` (`idGender` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`user` (
  `idUser` INT UNSIGNED NOT NULL,
  `email` VARCHAR(254) NULL,
  `userName` VARCHAR(20) NULL,
  `birthDate` DATE NULL,
  `genderId` TINYINT UNSIGNED NULL,
  `countryId` TINYINT UNSIGNED NOT NULL,
  `postalCode` VARCHAR(45) NULL,
  PRIMARY KEY (`idUser`),
  UNIQUE INDEX `idUser_UNIQUE` (`idUser` ASC) VISIBLE,
  INDEX `Country_idx` (`countryId` ASC) VISIBLE,
  INDEX `Gender_idx` (`genderId` ASC) VISIBLE,
  CONSTRAINT `Country`
    FOREIGN KEY (`countryId`)
    REFERENCES `YouTube`.`country` (`idCountry`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Gender`
    FOREIGN KEY (`genderId`)
    REFERENCES `YouTube`.`gender` (`idGender`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`videoStatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`videoStatus` (
  `idVideoStatus` TINYINT UNSIGNED NOT NULL,
  `videoStatusDescrip` VARCHAR(30) NULL,
  PRIMARY KEY (`idVideoStatus`),
  UNIQUE INDEX `idVideoStatus_UNIQUE` (`idVideoStatus` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`videos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`videos` (
  `idVideos` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(100) NULL,
  `descrip` TEXT NULL,
  `size` INT UNSIGNED NULL,
  `filename` VARCHAR(50) NULL,
  `videoLength` TIME NULL,
  `thumbnail` VARCHAR(100) NULL,
  `views` INT UNSIGNED NULL,
  `stateId` TINYINT UNSIGNED NULL,
  `userId` INT UNSIGNED NULL,
  `launchDate` DATETIME NULL,
  PRIMARY KEY (`idVideos`),
  UNIQUE INDEX `idVideos_UNIQUE` (`idVideos` ASC) VISIBLE,
  INDEX `UserVideo_idx` (`userId` ASC) VISIBLE,
  INDEX `StatusVideo_idx` (`stateId` ASC) VISIBLE,
  CONSTRAINT `UserVideo`
    FOREIGN KEY (`userId`)
    REFERENCES `YouTube`.`user` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `StatusVideo`
    FOREIGN KEY (`stateId`)
    REFERENCES `YouTube`.`videoStatus` (`idVideoStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`labels`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`labels` (
  `idLabels` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `labelDescrip` VARCHAR(15) NULL,
  PRIMARY KEY (`idLabels`),
  UNIQUE INDEX `idLabels_UNIQUE` (`idLabels` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`labelVideo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`labelVideo` (
  `idLabelVideo` INT NOT NULL,
  `labelId` INT UNSIGNED NULL,
  `videoId` INT UNSIGNED NULL,
  PRIMARY KEY (`idLabelVideo`),
  INDEX `VideoLabel_idx` (`videoId` ASC) VISIBLE,
  INDEX `Label_idx` (`labelId` ASC) VISIBLE,
  CONSTRAINT `VideoLabel`
    FOREIGN KEY (`videoId`)
    REFERENCES `YouTube`.`videos` (`idVideos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Label`
    FOREIGN KEY (`labelId`)
    REFERENCES `YouTube`.`labels` (`idLabels`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`channel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`channel` (
  `idChannel` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `channelName` VARCHAR(30) NULL,
  `channelDescrip` TEXT NULL,
  `channelDateCrea` DATE NULL,
  `userId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`userId`),
  INDEX `UserChannel_idx` (`userId` ASC) VISIBLE,
  UNIQUE INDEX `idChannel_UNIQUE` (`idChannel` ASC) VISIBLE,
  UNIQUE INDEX `userId_UNIQUE` (`userId` ASC) VISIBLE,
  CONSTRAINT `UserChannel`
    FOREIGN KEY (`userId`)
    REFERENCES `YouTube`.`user` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`subscribers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`subscribers` (
  `idSubscribers` INT NOT NULL,
  `userId` INT UNSIGNED NULL,
  `channelId` INT UNSIGNED NULL,
  PRIMARY KEY (`idSubscribers`),
  INDEX `UserSubs_idx` (`userId` ASC) VISIBLE,
  INDEX `ChannelSubs_idx` (`channelId` ASC) VISIBLE,
  CONSTRAINT `UserSubs`
    FOREIGN KEY (`userId`)
    REFERENCES `YouTube`.`user` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ChannelSubs`
    FOREIGN KEY (`channelId`)
    REFERENCES `YouTube`.`channel` (`idChannel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`likeVideo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`likeVideo` (
  `idLikeVideo` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `videoId` INT UNSIGNED NULL,
  `userId` INT UNSIGNED NULL,
  `date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP(),
  PRIMARY KEY (`idLikeVideo`),
  UNIQUE INDEX `idLikeVideo_UNIQUE` (`idLikeVideo` ASC) VISIBLE,
  INDEX `userLike_idx` (`userId` ASC) VISIBLE,
  INDEX `videoLike_idx` (`videoId` ASC) VISIBLE,
  CONSTRAINT `userLike`
    FOREIGN KEY (`userId`)
    REFERENCES `YouTube`.`user` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `videoLike`
    FOREIGN KEY (`videoId`)
    REFERENCES `YouTube`.`videos` (`idVideos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`likeDislikeVideo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`likeDislikeVideo` (
  `iLlikeDislikeVideo` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `likeDislike` TINYINT(1) NULL,
  `videoId` INT UNSIGNED NULL,
  `userId` INT UNSIGNED NULL,
  `dateHour` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`iLlikeDislikeVideo`),
  UNIQUE INDEX `iLlikeDislikeVideo_UNIQUE` (`iLlikeDislikeVideo` ASC) VISIBLE,
  INDEX `VideoLikeDislike_idx` (`videoId` ASC) VISIBLE,
  INDEX `UserLikeDislike_idx` (`userId` ASC) VISIBLE,
  CONSTRAINT `VideoLikeDislike`
    FOREIGN KEY (`videoId`)
    REFERENCES `YouTube`.`videos` (`idVideos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `UserLikeDislike`
    FOREIGN KEY (`userId`)
    REFERENCES `YouTube`.`user` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`playlist` (
  `idPlaylist` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  `date` DATE NULL DEFAULT curdate(),
  `state` TINYINT(1) NULL DEFAULT 0,
  `userId` INT UNSIGNED NULL,
  PRIMARY KEY (`idPlaylist`),
  UNIQUE INDEX `idPlaylist_UNIQUE` (`idPlaylist` ASC) VISIBLE,
  INDEX `UserPlaylist_idx` (`userId` ASC) VISIBLE,
  CONSTRAINT `UserPlaylist`
    FOREIGN KEY (`userId`)
    REFERENCES `YouTube`.`user` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`playlistVideo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`playlistVideo` (
  `idPlaylistVideo` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `playlistId` INT UNSIGNED NULL,
  `videoId` INT UNSIGNED NULL,
  PRIMARY KEY (`idPlaylistVideo`),
  UNIQUE INDEX `idPlaylistVideo_UNIQUE` (`idPlaylistVideo` ASC) VISIBLE,
  INDEX `PlaylistId_idx` (`playlistId` ASC) VISIBLE,
  INDEX `VideoId_idx` (`videoId` ASC) VISIBLE,
  CONSTRAINT `PlaylistId`
    FOREIGN KEY (`playlistId`)
    REFERENCES `YouTube`.`playlist` (`idPlaylist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `VideoId`
    FOREIGN KEY (`videoId`)
    REFERENCES `YouTube`.`videos` (`idVideos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`comments` (
  `idComments` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `textComment` TEXT NULL,
  `dateHour` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `userId` INT UNSIGNED NULL,
  `videoId` INT UNSIGNED NULL,
  PRIMARY KEY (`idComments`),
  UNIQUE INDEX `idComments_UNIQUE` (`idComments` ASC) VISIBLE,
  INDEX `userComment_idx` (`userId` ASC) VISIBLE,
  INDEX `videoComment_idx` (`videoId` ASC) VISIBLE,
  CONSTRAINT `userComment`
    FOREIGN KEY (`userId`)
    REFERENCES `YouTube`.`user` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `videoComment`
    FOREIGN KEY (`videoId`)
    REFERENCES `YouTube`.`videos` (`idVideos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `YouTube`.`likeDislikeComment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `YouTube`.`likeDislikeComment` (
  `iLlikeDislikeComment` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `likeDislike` TINYINT(1) NULL,
  `dateHour` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `userId` INT UNSIGNED NULL,
  `commentId` INT UNSIGNED NULL,
  PRIMARY KEY (`iLlikeDislikeComment`),
  UNIQUE INDEX `iLlikeDislikeComment_UNIQUE` (`iLlikeDislikeComment` ASC) VISIBLE,
  INDEX `userLikeDisComment_idx` (`userId` ASC) VISIBLE,
  INDEX `commentLikeDis_idx` (`commentId` ASC) VISIBLE,
  CONSTRAINT `userLikeDisComment`
    FOREIGN KEY (`userId`)
    REFERENCES `YouTube`.`user` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `commentLikeDis`
    FOREIGN KEY (`commentId`)
    REFERENCES `YouTube`.`comments` (`idComments`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
